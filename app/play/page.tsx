"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card } from "@/components/ui/card"
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select"
import { Timer, Lightbulb, RotateCcw, Pause } from "lucide-react"
import { cn } from "@/lib/utils"

export default function PlayPage() {
  const [difficulty, setDifficulty] = useState("normal")
  const [isPaused, setIsPaused] = useState(false)
  
  // Mock grid data (would be generated by AI in production)
  const grid = Array(9).fill(null).map(() => Array(9).fill(""))
  
  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-4xl mx-auto">
        <div className="flex flex-wrap gap-4 justify-between items-center mb-8">
          <Select value={difficulty} onValueChange={setDifficulty}>
            <SelectTrigger className="w-[180px]">
              <SelectValue placeholder="Select difficulty" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="very-easy">Very Easy</SelectItem>
              <SelectItem value="easy">Easy</SelectItem>
              <SelectItem value="normal">Normal</SelectItem>
              <SelectItem value="hard">Hard</SelectItem>
              <SelectItem value="expert">Expert</SelectItem>
            </SelectContent>
          </Select>

          <div className="flex gap-2">
            <Button variant="outline" size="icon">
              <Timer className="h-4 w-4" />
            </Button>
            <Button variant="outline" size="icon">
              <Lightbulb className="h-4 w-4" />
            </Button>
            <Button variant="outline" size="icon">
              <RotateCcw className="h-4 w-4" />
            </Button>
            <Button 
              variant="outline" 
              size="icon"
              onClick={() => setIsPaused(!isPaused)}
            >
              <Pause className="h-4 w-4" />
            </Button>
          </div>
        </div>

        <Card className={cn(
          "aspect-square p-4",
          isPaused && "blur-xl transition-all duration-300"
        )}>
          <div className="grid grid-cols-9 gap-0.5 h-full">
            {grid.map((row, i) => 
              row.map((cell, j) => (
                <div
                  key={`${i}-${j}`}
                  className={cn(
                    "border flex items-center justify-center text-lg font-medium",
                    j % 3 === 2 && "border-r-2",
                    i % 3 === 2 && "border-b-2",
                    j === 0 && "border-l-2",
                    i === 0 && "border-t-2"
                  )}
                >
                  {cell}
                </div>
              ))
            )}
          </div>
        </Card>

        <div className="grid grid-cols-3 sm:grid-cols-9 gap-2 mt-8">
          {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((num) => (
            <Button
              key={num}
              variant="outline"
              className="aspect-square text-lg font-medium"
            >
              {num}
            </Button>
          ))}
        </div>
      </div>
    </div>
  )
}